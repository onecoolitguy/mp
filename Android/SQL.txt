activity-main.xml
<?xml version="1.0" encoding="utf-8"?>
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <LinearLayout
        android:orientation="vertical"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:padding="16dp"
        android:gravity="center_horizontal">

        <EditText
            android:id="@+id/idInput"
            android:hint="Enter ID"
            android:inputType="number"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="30dp"
            android:padding="12dp"/>

        <EditText
            android:id="@+id/nameInput"
            android:hint="Enter Name"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"

            android:layout_marginTop="20dp"
            android:padding="12dp"/>

        <EditText
            android:id="@+id/marksInput"
            android:hint="Enter Marks"
            android:inputType="number"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="20dp"
            android:padding="12dp"/>
        <Button
            android:id="@+id/addBtn"
            android:text="Add Student"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="25dp"/>

        <Button
            android:id="@+id/updateBtn"
            android:text="Update Student"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="15dp"/>

        <Button
            android:id="@+id/deleteBtn"
            android:text="Delete Student"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="15dp"/>

        <Button
            android:id="@+id/viewBtn"
            android:text="View All Students"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="15dp"/>

        <TextView
            android:id="@+id/resultView"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:textSize="16sp"
            android:paddingTop="20dp"

            android:layout_marginTop="15dp"/>

    </LinearLayout>
</ScrollView>

MainActivity.java
package com.example.myapplication;

import android.database.Cursor;

import android.os.Bundle;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    Database db;
    EditText idInput, nameInput, marksInput;
    Button addBtn, updateBtn, deleteBtn, viewBtn;
    TextView resultView;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        db = new Database(this);

        idInput = findViewById(R.id.idInput);
        nameInput = findViewById(R.id.nameInput);
        marksInput = findViewById(R.id.marksInput);
        addBtn = findViewById(R.id.addBtn);
        updateBtn = findViewById(R.id.updateBtn);
        deleteBtn = findViewById(R.id.deleteBtn);
        viewBtn = findViewById(R.id.viewBtn);
        resultView = findViewById(R.id.resultView);

        addBtn.setOnClickListener(v -> {
            String name = nameInput.getText().toString().trim();

            if (name.isEmpty()) {
                Toast.makeText(this, "Enter name", Toast.LENGTH_SHORT).show();
                return;
            }
            int marks = Integer.parseInt(marksInput.getText().toString());
            if (db.insertStudent(name, marks)) {
                Toast.makeText(this, "Inserted Successfully", Toast.LENGTH_SHORT).show();
            } else {
                Toast.makeText(this, "Insert Failed", Toast.LENGTH_SHORT).show();
            }
        });

        updateBtn.setOnClickListener(v -> {

            String idStr = idInput.getText().toString().trim();
            String name = nameInput.getText().toString().trim();
            if (idStr.isEmpty() || name.isEmpty()) {
                Toast.makeText(this, "Enter ID and new name", Toast.LENGTH_SHORT).show();
                return;
            }
            int id = Integer.parseInt(idStr);
            int marks = Integer.parseInt(marksInput.getText().toString());
            if (db.updateStudent(id, name, marks)) {
                Toast.makeText(this, "Updated Successfully", Toast.LENGTH_SHORT).show();
            } else {
                Toast.makeText(this, "Update Failed. ID not found.", Toast.LENGTH_SHORT).show();
            }
        });

        deleteBtn.setOnClickListener(v -> {
            String idStr = idInput.getText().toString().trim();
            if (idStr.isEmpty()) {
                Toast.makeText(this, "Enter ID to delete", Toast.LENGTH_SHORT).show();
                return;
            }
            int id = Integer.parseInt(idStr);
            if (db.deleteStudent(id)) {
                Toast.makeText(this, "Deleted Successfully", Toast.LENGTH_SHORT).show();
            } else {
                Toast.makeText(this, "Delete Failed. ID not found.", Toast.LENGTH_SHORT).show();
            }
        });

        viewBtn.setOnClickListener(v -> {
            Cursor cursor = db.getAllStudents();

            StringBuilder sb = new StringBuilder();
            while (cursor.moveToNext()) {
                sb.append("ID: ").append(cursor.getInt(0))
                        .append(", Name: ").append(cursor.getString(1))
                        .append(", Marks: ").append(cursor.getInt(2))
                        .append("\n");
            }
            resultView.setText(sb.toString());
        });
    }
}

Database.java
package com.example.myapplication;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;

public class Database extends SQLiteOpenHelper {

    private static final String DATABASE_NAME = "student_db";
    private static final String TABLE_NAME = "students";
    private static final String COL_ID = "id";
    private static final String COL_NAME = "name";
    private static final String COL_MARKS = "marks";

    public Database(Context context) {
        super(context, DATABASE_NAME, null, 1);
    }

    @Override
    public void onCreate(SQLiteDatabase db) {
        db.execSQL("CREATE TABLE " + TABLE_NAME + " (" +
                COL_ID + " INTEGER PRIMARY KEY AUTOINCREMENT, " +
                COL_NAME + " TEXT, " +
                COL_MARKS + " INTEGER)");
    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        db.execSQL("DROP TABLE IF EXISTS " + TABLE_NAME);

        onCreate(db);
    }

    public boolean insertStudent(String name, int marks) {
        SQLiteDatabase db = this.getWritableDatabase();
        ContentValues values = new ContentValues();
        values.put(COL_NAME, name.trim());
        values.put(COL_MARKS, marks);
        long result = db.insert(TABLE_NAME, null, values);
        return result != -1;
    }

    public boolean updateStudent(int id, String name, int marks) {

        SQLiteDatabase db = this.getWritableDatabase();
        ContentValues values = new ContentValues();
        values.put(COL_NAME, name.trim());
        values.put(COL_MARKS, marks);
        int result = db.update(TABLE_NAME, values, COL_ID + "=?", new String[]{String.valueOf(id)});
        return result > 0;
    }

    public boolean deleteStudent(int id) {
        SQLiteDatabase db = this.getWritableDatabase();
        int result = db.delete(TABLE_NAME, COL_ID + "=?", new String[]{String.valueOf(id)});
        return result > 0;
    }

    public Cursor getAllStudents() {
        SQLiteDatabase db = this.getReadableDatabase();
        return db.rawQuery("SELECT * FROM " + TABLE_NAME, null);
    }
}